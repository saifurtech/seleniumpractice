{"version":3,"sources":["component/TodoListComponent.js","component/InProgressListComponent.js","component/DoneComponent.js","App.js","serviceWorker.js","index.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","dialogueOpen","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","TodoListComponent","handleOpen","e","setState","header","target","innerText","body","todos","find","x","trim","handleClose","handleToDoList","todo","concat","handleInProgress","ev","getAttribute","state","bind","this","undefined","List","map","value","ListItem","key","role","dense","button","ListItemIcon","Checkbox","edge","tabIndex","inputProps","ListItemText","id","primary","Dialog","onClose","aria-labelledby","open","DialogContent","dividers","gutterBottom","React","Component","width","maxWidth","backgroundColor","background","paper","InProgressListComponent","inProgress","handleDone","DoneComponent","done","data","console","log","useStyles","makeStyles","flexGrow","height","control","menuButton","marginRight","title","gridStyle","appBarStyle","btnStyle","labelInputProps","step","disabled","App","require","useState","setTodo","setInProgress","setDone","DndProvider","backend","Backend","AppBar","Toolbar","Grid","container","justify","item","xs","TextField","label","Paper","component","required","onInput","TextareaAutosize","placeholder","rows","ButtonGroup","size","Button","ele","filter","handleInProgressList","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3680b5b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Checkbox,\r\n  ListItemText,\r\n  IconButton,\r\n  Dialog,\r\n  DialogContent,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n});\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2)\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, dialogueOpen } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {dialogueOpen ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={dialogueOpen}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nclass TodoListComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dialogueOpen: false,\r\n      todos: []\r\n    };\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleToDoList = this.handleToDoList.bind(this);\r\n  }\r\n\r\n  handleOpen = e => {\r\n    this.setState({\r\n      dialogueOpen: true,\r\n      header: e.target.innerText,\r\n      body: this.props.todos.find(\r\n        x => x.header.trim() === e.target.innerText.trim()\r\n      ).body\r\n    });\r\n  };\r\n\r\n  handleClose = () =>\r\n    this.setState({\r\n      dialogueOpen: false\r\n    });\r\n\r\n  handleToDoList = todo => {\r\n    this.props.todos.concat(todo);\r\n  };\r\n\r\n  handleInProgress = ev => {\r\n    this.props.handleInProgress(ev.target.getAttribute(\"aria-labelledby\"));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    if (classes === undefined) {\r\n      return;\r\n    }\r\n    return (\r\n      <>\r\n        <List className={classes.root}>\r\n          {this.props.todos.map(value => {\r\n            return (\r\n              <ListItem key={value} role={undefined} dense button>\r\n                <ListItemIcon>\r\n                  <Checkbox\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                    inputProps={{ \"aria-labelledby\": value.header }}\r\n                    onClick={this.handleInProgress.bind(this)}\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  id={value.header}\r\n                  primary={value.header}\r\n                  onClick={this.handleOpen}\r\n                />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n        <Dialog\r\n          onClose={this.handleClose}\r\n          aria-labelledby={this.state.header}\r\n          open={this.state.dialogueOpen}\r\n        >\r\n          <DialogTitle id={this.state.header}>{this.state.header}</DialogTitle>\r\n          <DialogContent dividers>\r\n            <Typography gutterBottom>{this.state.body}</Typography>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(TodoListComponent);\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Checkbox,\r\n  ListItemText,\r\n  IconButton,\r\n  Dialog,\r\n  DialogContent,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n});\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2)\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, dialogueOpen } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {dialogueOpen ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={dialogueOpen}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nclass InProgressListComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dialogueOpen: false,\r\n      inProgress: []\r\n    };\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleToDoList = this.handleToDoList.bind(this);\r\n  }\r\n\r\n  handleOpen = e => {\r\n    this.setState({\r\n      dialogueOpen: true,\r\n      header: e.target.innerText,\r\n      body: this.props.inProgress.find(\r\n        x => x.header.trim() === e.target.innerText.trim()\r\n      ).body\r\n    });\r\n  };\r\n\r\n  handleClose = e =>\r\n    this.setState({\r\n      dialogueOpen: false\r\n    });\r\n\r\n  handleToDoList = todo => {\r\n    this.props.handleToDoList(todo);\r\n  };\r\n\r\n  handleDone = ev => {\r\n    this.props.handleDone(ev.target.getAttribute(\"aria-labelledby\"));\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (classes === undefined) {\r\n      return;\r\n    }\r\n    return (\r\n      <>\r\n        <List className={classes.root}>\r\n          {this.props.inProgress.map(value => {\r\n            return (\r\n              <ListItem key={value} role={undefined} dense button>\r\n                <ListItemIcon>\r\n                  <Checkbox\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                    inputProps={{ \"aria-labelledby\": value.header }}\r\n                    onClick={this.handleDone.bind(this)}\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  id={value.header}\r\n                  primary={value.header}\r\n                  onClick={this.handleOpen}\r\n                />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n        <Dialog\r\n          onClose={this.handleClose}\r\n          aria-labelledby={this.state.header}\r\n          open={this.state.dialogueOpen}\r\n        >\r\n          <DialogTitle id={this.state.header}>{this.state.header}</DialogTitle>\r\n          <DialogContent dividers>\r\n            <Typography gutterBottom>{this.state.body}</Typography>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(InProgressListComponent);\r\n","import React from \"react\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  Checkbox,\r\n  ListItemText,\r\n  IconButton,\r\n  Dialog,\r\n  DialogContent,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  }\r\n});\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2)\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, dialogueOpen } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {dialogueOpen ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={dialogueOpen}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nclass DoneComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dialogueOpen: false,\r\n      done: []\r\n    };\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleToDoList = this.handleToDoList.bind(this);\r\n  }\r\n\r\n  handleOpen = e => {\r\n    this.setState({\r\n      dialogueOpen: true,\r\n      header: e.target.innerText,\r\n      body: this.props.done.find(\r\n        x => x.header.trim() === e.target.innerText.trim()\r\n      ).body\r\n    });\r\n  };\r\n\r\n  handleClose = e =>\r\n    this.setState({\r\n      dialogueOpen: false\r\n    });\r\n\r\n  handleToDoList = todo => {\r\n    this.props.handleToDoList(todo);\r\n  };\r\n\r\n  onDrop(data) {\r\n    console.log(data);\r\n    this.props.inProgress.concat(data);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if (classes === undefined) {\r\n      return;\r\n    }\r\n    return (\r\n      <>\r\n        <List className={classes.root}>\r\n          {this.props.done.map(value => {\r\n            return (\r\n              <ListItem key={value} role={undefined} dense button>\r\n                <ListItemIcon>\r\n                  <Checkbox\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                    inputProps={{ \"aria-labelledby\": value.header }}\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  id={value.header}\r\n                  primary={value.header}\r\n                  onClick={this.handleOpen}\r\n                />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n        <Dialog\r\n          onClose={this.handleClose}\r\n          aria-labelledby={this.state.header}\r\n          open={this.state.dialogueOpen}\r\n        >\r\n          <DialogTitle id={this.state.header}>{this.state.header}</DialogTitle>\r\n          <DialogContent dividers>\r\n            <Typography gutterBottom>{this.state.body}</Typography>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(useStyles)(DoneComponent);\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport TodoListComponent from \"./component/TodoListComponent\";\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  Paper,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  ButtonGroup,\r\n  TextField,\r\n  TextareaAutosize\r\n} from \"@material-ui/core\";\r\nimport InProgressListComponent from \"./component/InProgressListComponent\";\r\nimport DoneComponent from \"./component/DoneComponent\";\r\nimport Backend from \"react-dnd-html5-backend\";\r\nimport { DndProvider } from \"react-dnd\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  gridStyle: {\r\n    backgroundColor: \"#eef3f7\"\r\n  },\r\n  appBarStyle: {\r\n    backgroundColor: \"LightSteelBlue\"\r\n  },\r\n  btnStyle: {\r\n    backgroundColor: \"LightSteelBlue\",\r\n    color: \"White\"\r\n  }\r\n}));\r\n\r\nconst labelInputProps = {\r\n  step: 300,\r\n  disabled: true,\r\n  margin: \"normal\",\r\n  variant: \"standard\"\r\n};\r\n\r\nfunction App() {\r\n  let data = require(\"./sampleTodo.json\");\r\n  const classes = useStyles();\r\n  let header = \"\";\r\n  let body = \"\";\r\n  const [todo, setTodo] = useState(data.todo);\r\n  const [inProgress, setInProgress] = useState(data.inProgress);\r\n  const [done, setDone] = useState(data.done);\r\n\r\n  return (\r\n    <DndProvider backend={Backend}>\r\n      <AppBar position=\"static\" className={classes.appBarStyle}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          />\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            My TODO List\r\n          </Typography>\r\n          {/* <Button color=\"inherit\">Login</Button> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <br />\r\n      <Grid container className={classes.root} spacing={2} justify=\"center\">\r\n        <Grid item xs={2} className={classes.gridStyle}>\r\n          <TextField label=\"ADD TODO\" inputProps={labelInputProps} />\r\n          <Paper>\r\n            <Typography component={\"div\"}>\r\n              <TextField\r\n                required\r\n                id=\"header\"\r\n                label=\"What Do You Need to Do\"\r\n                margin=\"normal\"\r\n                onInput={e => (header = e.target.value)}\r\n              />\r\n            </Typography>\r\n            <Typography>\r\n              <TextareaAutosize\r\n                placeholder=\"Describe Your TODO\"\r\n                rows={5}\r\n                onInput={e => (body = e.target.value)}\r\n              />\r\n            </Typography>\r\n            <ButtonGroup size=\"medium\" aria-label=\"Add or cancel button\">\r\n              <Button\r\n                className={classes.btnStyle}\r\n                onClick={() => {\r\n                  if (header === \"\" || body === \"\") {\r\n                    return;\r\n                  }\r\n                  setTodo(todo.concat({ header: header, body: body }));\r\n                }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button className={classes.btnStyle} onClick={() => {}}>\r\n                Clear\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={2} className={classes.gridStyle}>\r\n          <TextField label=\"TODO LIST\" inputProps={labelInputProps} />\r\n          <Paper>\r\n            <TodoListComponent\r\n              handleToDoList={() => todo}\r\n              todos={todo}\r\n              handleInProgress={header => {\r\n                let ele = todo.find(x => x.header === header);\r\n                setTodo(todo.filter(x => x.header !== ele.header));\r\n                setInProgress(inProgress.concat(ele));\r\n              }}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={2} className={classes.gridStyle}>\r\n          <TextField label=\"IN-PROGRESS\" inputProps={labelInputProps} />\r\n          <Paper>\r\n            <InProgressListComponent\r\n              handleInProgressList={() =>\r\n                setInProgress(inProgress.concat(data.inProgress))\r\n              }\r\n              inProgress={inProgress}\r\n              handleDone={header => {\r\n                let ele = inProgress.find(x => x.header === header);\r\n                setInProgress(inProgress.filter(x => x.header !== ele.header));\r\n                setDone(done.concat(ele));\r\n              }}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={2} className={classes.gridStyle}>\r\n          <TextField label=\"DONE\" inputProps={labelInputProps} />\r\n          <Paper>\r\n            <DoneComponent\r\n              handleInProgressList={() => setDone(done.concat(data.done))}\r\n              done={done}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </DndProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}